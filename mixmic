#!/usr/bin/gjs

const GLib = imports.gi.GLib;
const Lang = imports.lang;
const Gtk = imports.gi.Gtk;
const Webkit = imports.gi.WebKit;

const Application = new Lang.Class({
    Name: 'MixMic',
    
    _init: function() {
        this.application = new Gtk.Application();
        
        this.application.connect('activate', Lang.bind(this, this._onActivate));
        this.application.connect('startup', Lang.bind(this, this._onStartup));
    },
    
    _buildUI: function()Â {
        // Window
        this._window = new Gtk.ApplicationWindow({ 
            application: this.application,
            title: "MixMic: mix your mics",
            default_height: 400,
            default_width: 500,
            border_width: 10,
            window_position: Gtk.WindowPosition.CENTER });
        
        //this._image = new Gtk.Image({file:"logo.png"});
        this._label = new Gtk.Label({label:"Mix your Mics !"});
        
        // Webview
        this._webView = new Webkit.WebView();
        this._webView.load_uri(GLib.filename_to_uri(GLib.get_current_dir()
            + "/mixmic.html", null));
        
        // Grid
        this._grid = new Gtk.Grid({
            row_spacing: 20
        });
        this._grid.attach(this._label, 0, 0, 1, 1);
        this._grid.attach(this._webView, 0, 1, 1, 1);
        
        this._window.add(this._grid);
        
        //Header Bar
        this._window.set_titlebar(this._getHeader());
        
        this._window.show_all();
    },
    
    _onActivate: function() {
        this._window.present();
    },
    
    _onStartup: function() {
        this._buildUI();
    },
    
    
    // Creates the header bar with a button to add a virtual mic
    _getHeader: function() {
        let headerBar, headerStart, imageAdd, buttonAdd;
        
        headerBar = new Gtk.HeaderBar();
        headerBar.set_title("MixMic");
        headerBar.set_subtitle("Mix your mics");
        headerBar.set_show_close_button(true);
        
        headerStart = new Gtk.Grid({
            column_spacing: headerBar.spacing
        });
        
        imageAdd = new Gtk.Image({
            icon_name: 'gtk-add',
            icon_size: Gtk.IconSize.SMALL_TOOLBAR
        });
        
        buttonAdd = new Gtk.Button({ image: imageAdd });
        buttonAdd.connect('clicked', null);
        
        headerStart.attach(buttonAdd, 0, 0, 1, 1);
        headerBar.pack_start(headerStart);
        
        return headerBar;
    }
});

let app = new Application();
app.application.run(ARGV);
