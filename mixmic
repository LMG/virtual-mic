#!/usr/bin/gjs

const GLib = imports.gi.GLib;
const Lang = imports.lang;
const Gtk = imports.gi.Gtk;
const Webkit = imports.gi.WebKit;


// A virtual Microphone:
// It has a name, a list of sources of sound (which are null sinks monitors)
// and one null sink that is its output
const VirtualMic = new Lang.Class({
    Name: 'VirtualMic 1',
    Sources: ['test'],
    sink: 25
});

const Application = new Lang.Class({
    Name: 'MixMic',
    
    _init: function() {
        this.application = new Gtk.Application();
        
        this.application.connect('activate', Lang.bind(this, this._onActivate));
        this.application.connect('startup', Lang.bind(this, this._onStartup));
        this.virtualMic = new VirtualMic();
    },
    
    _buildUI: function()Â {
        // Window
        this._window = new Gtk.ApplicationWindow({ 
            application: this.application,
            title: "MixMic: mix your mics",
            default_height: 400,
            default_width: 500,
            border_width: 10,
            window_position: Gtk.WindowPosition.CENTER });
        
        // Sidebar
        this._sidebar = new Gtk.StackSidebar();
        this._stack = new Gtk.Stack();
        // labels in sidebar
        this._label = new Gtk.Label({label: this.virtualMic.Sources[0]});
        
        this._stack.add_titled(this._label, "1", "test");
        this._sidebar.set_vexpand(true);
        this._sidebar.set_hexpand(true);
        
        this._sidebar.set_stack(this._stack);
        
                
        // Grid
        this._grid = new Gtk.Grid({
            row_spacing: 20
        });
        this._grid.attach(this._sidebar, 0, 0, 1, 1);
        
        this._window.add(this._grid);
        
        //Header Bar
        this._window.set_titlebar(this._getHeader());
        
        this._window.show_all();
    },
    
    _onActivate: function() {
        this._window.present();
    },
    
    _onStartup: function() {
        this._buildUI();
    },
    
    
    // Creates the header bar with a button to add a virtual mic
    _getHeader: function() {
        let headerBar, headerStart, imageAdd, buttonAdd;
        
        headerBar = new Gtk.HeaderBar();
        headerBar.set_title("MixMic");
        headerBar.set_subtitle("Mix your mics");
        headerBar.set_show_close_button(true);
        
        headerStart = new Gtk.Grid({
            column_spacing: headerBar.spacing
        });
        
        imageAdd = new Gtk.Image({
            icon_name: 'gtk-add',
            icon_size: Gtk.IconSize.SMALL_TOOLBAR
        });
        
        buttonAdd = new Gtk.Button({ image: imageAdd });
        buttonAdd.connect('clicked', null);
        
        headerStart.attach(buttonAdd, 0, 0, 1, 1);
        headerBar.pack_start(headerStart);
        
        return headerBar;
    }
});

let app = new Application();
app.application.run(ARGV);
